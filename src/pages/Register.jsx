import React, { useState } from "react";
import { useNavigate } from "react-router-dom";
import { registerUser } from "../services/apiService";
import Navbar from "../components/Navbar";

const Register = () => {
  const navigate = useNavigate();

  // State variables
  const [name, setName] = useState("");
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [confirmPassword, setConfirmPassword] = useState("");
  const [error, setError] = useState("");
  const [success, setSuccess] = useState("");

  const handleRegister = async (e) => {
    e.preventDefault();
    setError("");
    setSuccess("");

    if (password !== confirmPassword) {
      setError("р╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╣Др╕бр╣Ир╕Хр╕гр╕Зр╕Бр╕▒р╕Щ");
      return;
    }

    try {
      await registerUser({ name, email, password });
      setSuccess("р╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Бр╕кр╕│р╣Ар╕гр╣Зр╕И! р╕Бр╕│р╕ер╕▒р╕Зр╕Щр╕│р╕Др╕╕р╕Ур╣Др╕Ыр╕Чр╕╡р╣Ир╕лр╕Щр╣Йр╕▓р╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ъ...");
      setTimeout(() => navigate("/login"), 2000); // Redirect to login after 2s
    } catch (err) {
      setError(err.response?.data?.message || "р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╣Гр╕Щр╕Бр╕▓р╕гр╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Б");
    }
  };

  return (
    <>
      <Navbar />

      <div className="min-h-screen flex items-center justify-center bg-[#FEF9E1]">
        <div className="card bg-[#E5D0AC] w-full max-w-md shadow-lg rounded-lg p-6">
          <h1 className="text-3xl font-bold text-[#6D2323] text-center">
            р╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Б
          </h1>
          <p className="text-sm text-center text-gray-700 mt-2">
            р╕кр╕гр╣Йр╕▓р╕Зр╕Ър╕▒р╕Нр╕Кр╕╡р╣Ар╕Юр╕╖р╣Ир╕нр╣Ар╕гр╕┤р╣Ир╕бр╕Хр╣Йр╕Щр╕Бр╕▓р╕гр╕кр╕▒р╣Ир╕Зр╕Лр╕╖р╣Йр╕нр╕кр╕┤р╕Щр╕Др╣Йр╕▓
          </p>

          {error && (
            <p className="text-center text-red-600 font-semibold mt-2">
              {error}
            </p>
          )}
          {success && (
            <p className="text-center text-green-600 font-semibold mt-2">
              {success}
            </p>
          )}

          <form className="mt-6" onSubmit={handleRegister}>
            {/* ЁЯФ╣ р╕Кр╕╖р╣Ир╕нр╣Ар╕Хр╣Зр╕б */}
            <div className="mb-4">
              <label className="block text-[#6D2323] font-semibold">
                р╕Кр╕╖р╣Ир╕н-р╕Щр╕▓р╕бр╕кр╕Бр╕╕р╕е
              </label>
              <input
                type="text"
                placeholder="р╕Бр╕гр╕нр╕Бр╕Кр╕╖р╣Ир╕н-р╕Щр╕▓р╕бр╕кр╕Бр╕╕р╕е"
                className="input input-bordered w-full p-3 border border-[#A31D1D] rounded-md bg-[#6D2323] text-white placeholder-gray-300"
                required
                value={name}
                onChange={(e) => setName(e.target.value)}
              />
            </div>

            {/* ЁЯФ╣ р╕нр╕╡р╣Ар╕бр╕е */}
            <div className="mb-4">
              <label className="block text-[#6D2323] font-semibold">
                р╕нр╕╡р╣Ар╕бр╕е
              </label>
              <input
                type="email"
                placeholder="р╕Бр╕гр╕нр╕Бр╕нр╕╡р╣Ар╕бр╕е"
                className="input input-bordered w-full p-3 border border-[#A31D1D] rounded-md bg-[#6D2323] text-white placeholder-gray-300"
                required
                value={email}
                onChange={(e) => setEmail(e.target.value)}
              />
            </div>

            {/* ЁЯФ╣ р╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ */}
            <div className="mb-4">
              <label className="block text-[#6D2323] font-semibold">
                р╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ
              </label>
              <input
                type="password"
                placeholder="р╕кр╕гр╣Йр╕▓р╕Зр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ"
                className="input input-bordered w-full p-3 border border-[#A31D1D] rounded-md bg-[#6D2323] text-white placeholder-gray-300"
                required
                value={password}
                onChange={(e) => setPassword(e.target.value)}
              />
            </div>

            {/* ЁЯФ╣ р╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ */}
            <div className="mb-4">
              <label className="block text-[#6D2323] font-semibold">
                р╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ
              </label>
              <input
                type="password"
                placeholder="р╕Бр╕гр╕нр╕Бр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╕нр╕╡р╕Бр╕Др╕гр╕▒р╣Йр╕З"
                className="input input-bordered w-full p-3 border border-[#A31D1D] rounded-md bg-[#6D2323] text-white placeholder-gray-300"
                required
                value={confirmPassword}
                onChange={(e) => setConfirmPassword(e.target.value)}
              />
            </div>

            {/* ЁЯФ╣ р╕Ыр╕╕р╣Ир╕бр╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Б */}
            <button
              type="submit"
              className="w-full bg-[#A31D1D] text-white py-3 rounded-lg font-semibold hover:bg-[#6D2323] transition"
            >
              р╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Б
            </button>
          </form>

          {/* ЁЯФ╣ р╕ер╕┤р╕Зр╕Бр╣Мр╕Бр╕ер╕▒р╕Ър╣Др╕Ыр╕лр╕Щр╣Йр╕▓ Login */}
          <p className="text-center text-sm mt-4">
            р╕бр╕╡р╕Ър╕▒р╕Нр╕Кр╕╡р╣Бр╕ер╣Йр╕з?
            <a
              href="/login"
              className="text-[#A31D1D] font-semibold hover:underline ml-1"
            >
              р╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ъ
            </a>
          </p>
        </div>
      </div>
    </>
  );
};

export default Register;
